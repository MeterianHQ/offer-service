version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
            - gradle- # used if checksum fails

      - run: gradle test integrationTest

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

      - save_cache:
          key: gradle-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle

      - run: ./service.sh dev_build

  uat:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - run:
          name: Apply Offers DB migrations
          command: |
              export OFFERS_ENGINE_DB_URL="$UAT_OFFERS_ENGINE_DB_URL"
              export OFFERS_ENGINE_DB_USER="$UAT_OFFERS_ENGINE_DB_USER"
              export OFFERS_ENGINE_DB_PASSWORD="$UAT_OFFERS_ENGINE_DB_PASSWORD"

              cd db-scripts
              gradle liquibaseCreate liquibaseUpdate -DuserName=$UAT_OFFERS_ENGINE_DB_USER -Dpassword=$UAT_OFFERS_ENGINE_DB_PASSWORD -Durl=jdbc:postgresql://$OFFERS_ENGINE_DB_URL/offers_engine
              cd ../

      - run: echo "Hello World from UAT"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - uat:
          filters:
            branches:
              only:
                - master
          requires:
            - build